

#Problem One
# (a)
#chi square is degree of freedome is two and also is exponential distribution with mean of 2
#sum of n chi quare of r degree freedom is chi square distribution with nr degress freedom.
n <- 3
N <- 10^4
y <- matrix(0,N,n)
for (j in 1:n){
  e <- numeric(N)
  for (i in 1:N) {
    e[i] <- rexp(100,1/2)
  }
  y[,j] <- e
}

# adding three chi square degree freedom 
z <- rowSums(y)
hist(z, breaks= "FD", probability = TRUE)
curve(dchisq(x,6), col = "red", add = TRUE)


# (b)
N<- 10^4
unif.mean <- numeric(N)
for (i in 1:N){
  unif.mean[i] <- mean(runif(50,0,1))
}

standard_norm<-(unif.mean-mean(unif.mean))/sd(unif.mean)
t_new<-standard_norm/sqrt(z/6)

hist(t_new, breaks= "FD", probability = TRUE)
curve(dt(x,6), col = "red", add = TRUE)


#Problem Two

#gamma function
my.gamma<-Vectorize(function(r) integrate(function(x) x^(r-1)*exp(-x), 0, Inf)$val)

# t-density function from page 388 
my.t <- Vectorize(function(t,k) my.gamma((k+1)/2)/ (sqrt(k*pi) * my.gamma(k/2) * (1+(t^2)/k)^((k+1)/2)) )

# four degree freedom
curve(my.t(x,4), col = "green",xlim=c(-2,2))
curve(dt(x,4), col = "brown",xlim=c(-2,2), lty = 2, add = TRUE)

# five degree freedom
curve(my.t(x,5), col = "green",xlim=c(-2,2))
curve(dt(x,5), col = "brown",xlim=c(-2,2), lty = 2, add = TRUE)

k<-5
N <- 50000
vars <- numeric(N)
moment_4 <- numeric(N)
for (i in 1:N) {
  x <- rt(100,k)
  vars[i] <- var(x)
  moment_4[i] <- mean(x^4)
}


#plot 4th moments
hist(moment_4)
# plot obs and expected variance
hist(vars, breaks="FD",xlim=c(0,10))
abline(v = k/(k-2), col = "red", lty = 2);
var_mean <- mean(vars)
var_theory <- k/(k-2)
var_mean;var_theory


#Problem Three

N<-5000; 
mean_square <- numeric(N)
vars <- numeric(N)
for (i in 1:N) {
  x <- runif(6,-1,1)
  mean_square[i] <- mean(x)^2
  vars[i] <- var(x)
}
plot(mean_square,vars)
cor.test(mean_square, vars)

# correlation coefficent is -0.3164728 and so there is a negative relationship between mean square and 
# variance. 

# anecdotal situations
extreme <- c(-1, -1.2, -1.03, -1.97, -1.9, -.99)
extreme_mean_square <- mean(extreme)^2
extreme_var <- var(extreme)
extreme_mean_square; extreme_var
# 1.818003, 0.2127767

extreme <- c(-0.1, 0.2, -.03, .07, -.09, .09)
extreme_mean_square <- mean(extreme)^2
extreme_var <- var(extreme)
extreme_mean_square; extreme_var
# 0.0005444444, 0.01374667

# from an extreme case that all points concentrate on -1 to 0
# the variance is 0.21 to 0.01. So it shows when square of mean increases
# the variance decreases.




# Problem four




#Problem Five
# If population's sigma is known
L <- 18.05 + qnorm(0.05) * 5/sqrt(20) #usually less than the true mean
U <- 18.05 + qnorm(0.95) * 5/sqrt(20) #usually greater than the true mean
L;U
# 90% confidence interval is between 16.211 and 19.889 

# If population's sigma is not known, use sample's standard deviation
counter <- 0
plot(x =c(11,25), y = c(1,100), type = "n", xlab = "", ylab = "") #blank plot
for (i in 1:1000) {
  x <-rnorm(20, 18.05, 5) #random sample
  L <- mean(x) + qt(0.05, 19) * sd(x)/sqrt(20) #usually less than the true mean
  U <- mean(x) + qt(0.95, 19) * sd(x)/sqrt(20) #usually greater than the true mean
  if (L < 18.05 && U > 18.05) counter <- counter + 1 #count +1 if we were correct
  if(i <= 100) segments(L, i, U, i)
}
abline (v = 18.05, col = "red") #vertical line at true mean
counter/1000 #what fraction of the time did our confidence interval include the true mean?
# 0.903
qt(c(0.05, .95), 19) #quantiles are more than 2 standard deviations

# As expected T confidence interval has probablity of 90% to catch the true mean of population



#Problem Six
5.29 + qt(0.25, 499) * (3.52/sqrt(500))
# 75% upper confidence interval is (-inf,5.183745)

plot(x =c(0,10), y = c(1,100), type = "n", xlab = "", ylab = "") #blank plot

means <- numeric(1000);lower = numeric(1000); upper = numeric(1000)
for (i in 1:500) {
  x <-rgamma(500, (5/12.25)*5,5/12.25) #random sample from population with mean 5, variance 12.25
  means[i] = mean(x) #accumulate statistics about the sample mean
  #Estimate a confidence interval from Student t
  lower[i] <- mean(x) + qt(0.25, 499) * sd(x)/sqrt(500) #usually less than the true mean
  upper[i] <- +Inf #usually greater than the true mean
  if(i <= 100) segments(lower[i], i, upper[i], i)
}
abline (v = 0, col = "red") #vertical line at true mean
#Quantiles for the sampling distribution of the population
qnt<-quantile(means, c(.025, .975)); qnt ; sum(qnt)/2
#These are close to the mean confidence interval
mean(lower); mean(upper); (mean(lower)+ mean(upper))/2

sum(means > qnt[2])/1000 #what fraction of the time did upper quantile fall below true mean?
sum(25 > upper)/1000 #what fraction of the time did Student's confidence interval fall below the true mean?
sum(means < qnt[1])/1000 #what fraction of the time did lower quantile lie above true mean?
sum(25 < lower)/1000 #what fraction of the time did Student's confidence interval lie above the true mean?

#The assumption behind the Student t distribution was not satisfied.
#We did very well by looking at more samples, but that is cheating.
#Perhaps we could use a bootstrap, but not today.

